#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 2.0.0.{build}

# branches to build
#branches:
  # whitelist
  #only:
    #- master
    
# Do not build on tags
skip_tags: false

# Start builds on tags only
skip_non_tags: false

# Skipping commits affecting specific files
# skip_commits:
#   files:
#   - 'src\ProjectCeleste.GameFiles.Tools.csproj'
#   - 'appveyor.yml'
#   - '.gitattributes'
#   - '.gitignore'
#   - 'LICENSE'
#   - 'README.md'

# 
pull_requests:
  do_not_increment_build_number: true
  
#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2017

# scripts that are called at very beginning, before repo cloning
init:
- ps: >-
    if ($env:APPVEYOR_REPO_TAG -eq "true")
    {
        $env:Build_Version = "$($env:APPVEYOR_REPO_TAG_NAME.Replace('v', ''))";
    }
    else
    {
        $env:Build_Version = "$($env:APPVEYOR_BUILD_VERSION)";
        $env:APPVEYOR_REPO_TAG_NAME = "v$($env:APPVEYOR_BUILD_VERSION)";
    }
- cmd: git config --global core.autocrlf true

# clone directory
clone_folder: c:\projects\ProjectCeleste.GameFiles.Tools

# fetch repository as zip archive
shallow_clone: false

# nuget
nuget:
  account_feed: true
  project_feed: true
  disable_publish_on_pr: true
  
# set clone depth
#clone_depth:  5                     # clone entire repository history if not defined

# environment variables
environment:
  access_token:
    secure: FCfA6NOUpYu23Acwkb5xfB0fI9iOtw7t7maO76F/0Qu0XTMAXnjLa33b8LUTahEY
  github_email:
    secure: Xr5Wz0A2j9IyEzMKqqTqlbyWcxYI2Ce05nq78ZRpMwQ=
  github_user:
    secure: KQ7QIFa56u+YS86mjhAUnA==
  priv_key:
    secure: 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

# build cache to preserve files/folders between builds
#cache:
#  - packages -> **\packages.config  # preserve packages directory in the root of build folder but will reset it if packages.config is modified
#  - '%LocalAppData%\NuGet\Cache'

# scripts that run after cloning repository
install:
- git submodule update --init --recursive

# enable patching of AssemblyInfo.* files
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '$(Build_Version)'
  package_version: '$(Build_Version)'
  assembly_version: '$(Build_Version)'
  file_version: '$(Build_Version)'
  informational_version: '$(Build_Version)'
  
#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: Any CPU

# to add several platforms to build matrix:
#platform:
#  - x86
#  - Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration:
  - Debug
  - Release

build:
  # MSBuild verbosity level
  verbosity: minimal

# scripts to run before build
before_build:
  # Display .NET Core version
  - cmd: dotnet --version
  # Display minimal restore text
  - cmd: dotnet restore ./src/ProjectCeleste.GameFiles.Tools.csproj --verbosity m

# scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
before_package:

# scripts to run after build
after_build:
  

# to run your custom scripts instead of automatic MSBuild
build_script:

#---------------------------------#
#       tests configuration       #
#---------------------------------#

# to disable automatic tests
test: off

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:
  - path: 'src\bin\Release\net47'
    name: ProjectCeleste.GameFiles.Tools.Net47
    type: zip
  - path: 'src\bin\Release\netcoreapp2.0'
    name: ProjectCeleste.GameFiles.Tools.NetCore2.0
    type: zip
  - path: 'src\bin\Release\netstandard2.0'
    name: ProjectCeleste.GameFiles.Tools.NetStandard2.0
    type: zip
  - path: 'src\bin\Release\ProjectCeleste.GameFiles.Tools.%Build_Version%.nupkg'
    name: NuGet
    
#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# providers: Local, FTP, WebDeploy, AzureCS, AzureBlob, S3, NuGet, Environment
# provider names are case-sensitive!
deploy:

  # Deploy to GitHub Releases
  - provider: GitHub
    tag: $(APPVEYOR_REPO_TAG_NAME)
    description: '[View CHANGELOG.md](https://github.com/ProjectCeleste/ProjectCeleste.GameFiles.Tools/blob/master/CHANGELOG.md)'
    release: ProjectCeleste.GameFiles.Tools v$(Build_Version)
    auth_token: $(access_token)
    artifact: ProjectCeleste.GameFiles.Tools.NetCore2.0, ProjectCeleste.GameFiles.Tools.NetStandard2.0, ProjectCeleste.GameFiles.Tools.Net47, NuGet
    draft: false
    prerelease: false
    force_update: true
    on:
      appveyor_repo_tag: true

  # Deploy NuGet
  - provider: NuGet
    server:                  # remove to push to NuGet.org
    api_key:
      secure: JurVq4I9wOP95B7ZAerkZlt/+f5MOQahoOCk9ScEA4bF6PIWe6iwEIMjhyUnnWgX
    skip_symbols: false
    symbol_server:           # remove to push symbols to SymbolSource.org
    artifact: NuGet
    on:
      appveyor_repo_tag: true
    
# scripts to run before deployment
before_deploy:
- ps: >-
    $fileContent = "-----BEGIN RSA PRIVATE KEY-----`n";
    $fileContent += $env:priv_key.Replace(' ', "`n");
    $fileContent += "`n-----END RSA PRIVATE KEY-----`n";
    Set-Content "$env:USERPROFILE\.ssh\id_rsa" "$($fileContent)";
    Set-Content "$env:USERPROFILE\.git-credentials" "https://$($env:access_token):x-oauth-basic@github.com`n";

- git config --global credential.helper store
- git config --global user.email "%github_email%"
- git config --global user.name "%github_user%"
- git checkout -b Appveyor "%APPVEYOR_REPO_COMMIT%"
- git add "src\ProjectCeleste.GameFiles.Tools.csproj"
- git commit -m "%APPVEYOR_REPO_TAG_NAME%"
- git checkout "%APPVEYOR_REPO_BRANCH%"
- git merge Appveyor
- git branch -d Appveyor
- git pull "origin" "%APPVEYOR_REPO_BRANCH%"
- git push "origin" "%APPVEYOR_REPO_BRANCH%"

# scripts to run after deployment
after_deploy:

# to run your custom scripts instead of provider deployments
deploy_script:

# to disable deployment
#deploy: off

#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
on_success:

# on build failure
on_failure:

# after build failure or success
on_finish:
